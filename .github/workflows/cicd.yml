name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  CI:
    name: CI - Build and Push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build JAR with Maven
      run: mvn clean package

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/rental-boardgame:latest -f Dockerfile .

    - name: Push Docker Image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/rental-boardgame:latest

  CD:
    name: CD - Deploy to MS Azure with Docker
    runs-on: ubuntu-latest

    needs:
      - CI
      
    steps:
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Pull Docker Image from Docker Hub
      run: 
        az acr repository delete --name tonkungarc --image rental-boardgame:latest --yes &&
        az acr import --name tonkungarc --source docker.io/${{ secrets.DOCKER_USERNAME }}/rental-boardgame:latest --image rental-boardgame:latest

    - name: Clean up existing Web App
      run: |
        az webapp delete --name rental-boardgame --resource-group ton-v1 || true

    - name: Create Azure App Service Plan
      run: |
        az appservice plan create \
          --name ton-app-plan \
          --resource-group ton-v1 \
          --sku B1 \
          --is-linux

    - name: Delete Container
      run: |
        az webapp config container delete \
          --name rental-boardgame \
          --resource-group ton-v1 || true

    - name: Create Azure Web App
      run: |
        az webapp create \
          --name rental-boardgame \
          --resource-group ton-v1 \
          --plan ton-app-plan
    
    - name: Config Container
      run: |
        az webapp config container set \
          --name rental-boardgame \
          --resource-group ton-v1 \
          --docker-custom-image-name tonkungarc.azurecr.io/rental-boardgame:latest \
          --enable-container-logging true



